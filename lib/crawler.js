// Generated by CoffeeScript 1.9.3
(function() {
  var Crawler, EventEmitter, Queue, request, util;

  EventEmitter = require('events').EventEmitter;

  util = require('util');

  request = require('request');

  Queue = require('./queue');

  Crawler = (function() {
    function Crawler() {
      EventEmitter.call(this);
      util.inherits(this, EventEmitter);
      this._queue = new Queue();
      this._callback = function(error, response, body) {
        if (!error && response.statusCode === 200) {
          return console.log(body);
        } else {
          return console.log(error);
        }
      };
    }

    Crawler.prototype["do"] = function(callback) {

      /*
      Callback to be executed when url has been requested
       */
      this._callback = callback;
      return callback;
    };

    Crawler.prototype.queue = function(url) {

      /*
      Push an url in the queue to be crawled
       */
      this._queue.push(url);
      return url;
    };

    Crawler.prototype.crawl = function(url, callback) {

      /*
      Request url and manage results in callback
       */
      return request(url, callback);
    };

    Crawler.prototype.start = function() {

      /*
       */
      var results, url;
      results = [];
      while (this._queue.size > 0) {
        url = this._queue.pop();
        results.push(this.crawl(url, this._callback));
      }
      return results;
    };

    return Crawler;

  })();

  module.exports = Crawler;

}).call(this);
