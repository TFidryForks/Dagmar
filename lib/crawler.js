// Generated by CoffeeScript 1.9.3
(function() {
  var Crawler, EventEmitter, Queue, request, util;

  EventEmitter = require('events').EventEmitter;

  util = require('util');

  request = require('request');

  Queue = require('./queue');

  Crawler = function() {

    /*
     */
    this._queue = new Queue();
    this._onSuccess = function(body) {
      return console.log(body);
    };
    this._onFailure = function(error) {
      return console.log(error);
    };
    EventEmitter.call(this);
    return this;
  };

  util.inherits(Crawler, EventEmitter);

  Crawler.prototype.onSuccess = function(callback) {

    /*
     */
    return this._onSuccess = callback;
  };

  Crawler.prototype.onFailure = function(callback) {

    /*
     */
    return this._onFailure = callback;
  };

  Crawler.prototype.queue = function(url) {

    /*
     */
    return this._queue.push(url);
  };

  Crawler.prototype.crawl = function(url, onSuccess, onFailure) {

    /*
     */
    return request(url, function(error, response, body) {
      if (!error && response.statusCode === 200) {
        return onSuccess(response, body);
      } else {
        return onFailure(response, error);
      }
    });
  };

  Crawler.prototype.start = function() {

    /*
     */
    var results;
    results = [];
    while (this._queue.size > 0) {
      results.push(this.crawl(this._queue.pop, this._onSuccess, this._onFailure));
    }
    return results;
  };

  module.exports = Crawler;

}).call(this);
